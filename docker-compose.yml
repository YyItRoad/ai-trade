version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: ai_trade_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      # 将容器的 3306 端口映射到主机的 3307 端口，以避免与本地可能存在的 MySQL 冲突
      - "3307:3306"
    volumes:
      # 将数据库数据持久化到本地
      - db_data:/var/lib/mysql
      # 启动时执行 SQL 初始化脚本
      - ./schema.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${DB_USER}", "-p${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: .
    container_name: ai_trade_backend
    restart: always
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      # 将本地代码挂载到容器中，实现热重载
      - .:/app
    depends_on:
      db:
        condition: service_healthy

volumes:
  db_data: